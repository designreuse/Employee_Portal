<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
	parent="abstract" >
	
	<var name="demo" class="net.esc20.txeis.EmployeeAccess.web.view.Demo"/>
	
	<on-start>
		<evaluate result="flowScope.message" expression="demoServiceTx.getMessage()"/>
		<evaluate result="demo.demoInfo" expression="demoServiceTx.getDemoInfo(externalContext.sessionMap.currentUser_employeeNumber)"/>
		<evaluate result="flowScope.maritalStatuses" expression="demoServiceTx.getAvailableMaritalActualStatuses()"/>
		<evaluate result="flowScope.restrictionCodes" expression="demoServiceTx.getAvailableRestrictionCodes()"/>
		<evaluate result="flowScope.states" expression="demoServiceTx.getAvailableStates()"/>
		<evaluate result="flowScope.titles" expression="demoServiceTx.getAvailableTitles()"/>
		<evaluate result="flowScope.generations" expression="demoServiceTx.getAvailableGenerations()"/>
		<evaluate result="flowScope.fieldsPopulated" expression="demoServiceTx.populateRequiredFields()"/>
	</on-start>
	
	<view-state id="demoStartView" view="demo" model="demo">
		<transition on="retrieve" to="retrieveDemo" bind="true" validate="false">
			<render fragments="body"/>
		</transition>
		<transition on="save" to="save" bind="true" validate="true">
			<render fragments="body" />
		</transition>
		
		<transition on="revert_name" to="revertName" bind="true" validate="false"/>
		<transition on="revert_alt_addr" to="revertAltAddr" bind="true" validate="false"/>
		<transition on="revert_cell_phone" to="revertCellPhone" bind="true" validate="false"/>
		<transition on="revert_drivers_license" to="revertDriversLicense" bind="true" validate="false"/>
		<transition on="revert_email" to="revertEmail" bind="true" validate="false"/>
		<transition on="revert_emergency_contact" to="revertEmergencyContact" bind="true" validate="false"/>
		<transition on="revert_home_phone" to="revertHomePhone" bind="true" validate="false"/>
		<transition on="revert_mail_addr" to="revertMailAddr" bind="true" validate="false"/>
		<transition on="revert_marital" to="revertMarital" bind="true" validate="false"/>
		<transition on="revert_restriction_codes" to="revertRestrictionCodes" bind="true" validate="false"/>
		<transition on="revert_work_phone" to="revertWorkPhone" bind="true" validate="false"/>
		
	</view-state>
	
	<decision-state id="checkPermission">
		<if test="flowScope.options.enableSelfServiceDemographic" then="startView" else="noAccess"/>
	</decision-state>
	
	<action-state id="startView">
		<set name="flowScope.dummyVariable" value="true"></set>
		<transition to="retrieveDemo"/>
	</action-state>
	
	<action-state id="retrieveDemo">
		<evaluate result="flowScope.demoInfoCurrent" expression="demoServiceTx.getDemoInfo(externalContext.sessionMap.currentUser_employeeNumber)"/>
		<transition to="retrieveDemoPending"/>
	</action-state>
	
	<action-state id="retrieveDemoPending">
		<evaluate result="demo.demoInfo" expression="demoServiceTx.getDemoInfoPending(flowScope.demoInfoCurrent)"/>
		<transition to="setDemoChanges"/>
		<on-exit>
			<evaluate result="flowScope.demoInfoPending" expression="demo.demoInfo.clone()"/>
		</on-exit>
	</action-state>
	
	<action-state id="setDemoChanges">
		<evaluate result="demo.demoInfoChanges" expression="demoServiceTx.getDemoInfoChanges(flowScope.demoInfoCurrent, demo.demoInfo)"/>
		<transition to="setFieldDisplay"/>
	</action-state>
	
	<action-state id="setFieldDisplay">
		<evaluate result="demo" expression="demoServiceTx.setOptions(demo)"/>
		<transition to="demoStartView"/>
		<on-exit>
			<set name="flowScope.focusedField" value="'retrieve'"/>
			<render fragments="body" />
		</on-exit>
	</action-state>
	
	<action-state id="save">
		<evaluate expression="demoServiceTx.saveDemo(messageContext, demo, flowScope.demoInfoPending, flowScope.demoInfoCurrent)" 
				  result="flowScope.saveSuccess"/>
		<transition on-exception="java.lang.Exception" to="demoStartView"/>
		<transition to="sendEmail" />
	</action-state>
		
	<action-state id="sendEmail">
		<evaluate expression="demoServiceTx.sendEmail(externalContext.sessionMap, demo, flowScope.demoInfoPending, flowScope.demoInfoCurrent)" result="flowScope.emailChanges"/>
			<transition to="retrieveDemo" />
			<on-exit>
				<set name="flowScope.focusedField" value="'retrieve'"/>
			</on-exit>
	</action-state>
	
	<action-state id="revertName">
		<evaluate result="demo.demoInfo.name" expression="demoServiceTx.revertDomainObject(flowScope.demoInfoCurrent.name)"/>
		<transition to="demoStartView"/>
		<on-exit>
			<render fragments="body" />
		</on-exit>
	</action-state>
	<action-state id="revertMailAddr">
		<evaluate result="demo.demoInfo.mailAddr" expression="demoServiceTx.revertDomainObject(flowScope.demoInfoCurrent.mailAddr)"/>
		<transition to="demoStartView"/>
		<on-exit>
			<render fragments="body" />
		</on-exit>
	</action-state>
	<action-state id="revertAltAddr">
		<evaluate result="demo.demoInfo.altAddr" expression="demoServiceTx.revertDomainObject(flowScope.demoInfoCurrent.altAddr)"/>
		<transition to="demoStartView"/>
		<on-exit>
			<render fragments="body" />
		</on-exit>
	</action-state>
	<action-state id="revertCellPhone">
		<evaluate result="demo.demoInfo.cellPhone" expression="demoServiceTx.revertDomainObject(flowScope.demoInfoCurrent.cellPhone)"/>
		<transition to="demoStartView"/>
		<on-exit>
			<render fragments="body" />
		</on-exit>
	</action-state>
	<action-state id="revertDriversLicense">
		<evaluate result="demo.demoInfo.driversLicense" expression="demoServiceTx.revertDomainObject(flowScope.demoInfoCurrent.driversLicense)"/>
		<transition to="demoStartView"/>
		<on-exit>
			<render fragments="body" />
		</on-exit>
	</action-state>
	<action-state id="revertEmail">
		<evaluate result="demo.demoInfo.email" expression="demoServiceTx.revertDomainObject(flowScope.demoInfoCurrent.email)"/>
		<transition to="demoStartView"/>
		<on-exit>
			<render fragments="body" />
		</on-exit>
	</action-state>
	<action-state id="revertEmergencyContact">
		<evaluate result="demo.demoInfo.emergencyContact" expression="demoServiceTx.revertDomainObject(flowScope.demoInfoCurrent.emergencyContact)"/>
		<transition to="demoStartView"/>
		<on-exit>
			<render fragments="body" />
		</on-exit>
	</action-state>
	<action-state id="revertHomePhone">
		<evaluate result="demo.demoInfo.homePhone" expression="demoServiceTx.revertDomainObject(flowScope.demoInfoCurrent.homePhone)"/>
		<transition to="demoStartView"/>
		<on-exit>
			<render fragments="body" />
		</on-exit>
	</action-state>
	<action-state id="revertMarital">
		<evaluate result="demo.demoInfo.marital" expression="demoServiceTx.revertDomainObject(flowScope.demoInfoCurrent.marital)"/>
		<transition to="demoStartView"/>
		<on-exit>
			<render fragments="body" />
		</on-exit>
	</action-state>
	<action-state id="revertRestrictionCodes">
		<evaluate result="demo.demoInfo.restrictionCodes" expression="demoServiceTx.revertDomainObject(flowScope.demoInfoCurrent.restrictionCodes)"/>
		<transition to="demoStartView"/>
		<on-exit>
			<render fragments="body" />
		</on-exit>
	</action-state>
	<action-state id="revertWorkPhone">
		<evaluate result="demo.demoInfo.workPhone" expression="demoServiceTx.revertDomainObject(flowScope.demoInfoCurrent.workPhone)"/>
		<transition to="demoStartView"/>
		<on-exit>
			<render fragments="body" />
		</on-exit>
	</action-state>
	
</flow>